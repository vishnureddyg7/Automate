import csv
import json

# Input and output file paths
input_file = r"C:\Users\lenov\Downloads\testing swuugy.csv"  # Replace with your input CSV file path
output_file = "report.csv"  # Output CSV file path

# Columns for the output CSV
output_columns = ["timestamp", "event", "biz", "platform", "biz_location", "id", "message"]

# Read data from the input CSV and write the processed report
try:
    with open(input_file, mode='r', encoding='utf-8') as infile, open(output_file, mode='w', newline='', encoding='utf-8') as outfile:
        reader = csv.DictReader(infile)  # Read input CSV as a dictionary
        writer = csv.writer(outfile)
        
        writer.writerow(output_columns)  # Write the header row
        
        # Process each row in the input CSV
        for row in reader:
            timestamp = row.get("timestamp", "")
            biz = row.get("biz", "")
            platform = row.get("platform", "")
            biz_location = row.get("biz_location", "")
            resp_payload = row.get("resp_payload", "")

            # Parse the resp_payload JSON
            try:
                resp_payload_json = json.loads(resp_payload)
                item_status_list = resp_payload_json.get("data", {}).get("itemToggleStatus", [])
                
                # Extract data for each item in itemToggleStatus
                for item in item_status_list:
                    status = item.get("status", "")
                    item_id = item.get("id", "")
                    message = item.get("message", "")
                    
                    # Only add rows where status is "fail"
                    if status == "fail":
                        writer.writerow([timestamp, "fail", biz, platform, biz_location, item_id, message])
            
            except json.JSONDecodeError as e:
                print(f"Error decoding JSON for row: {row} - {e}")

    print(f"Report successfully saved to {output_file}.")
except Exception as e:
    print(f"An error occurred: {e}")
